{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","number","name","onHandleChange","event","target","value","setState","onHandleSubmit","preventDefault","addContact","props","id","this","className","css","form","onSubmit","label","input","onChange","type","pattern","title","required","button","Component","Filter","searchContact","filter","placeholder","ContactList","deleteContact","list","map","item","contact","btn","onClick","App","contacts","onHandleNewContact","findDublicate","find","alert","uuidv4","prevState","onHandleFilter","toLowerCase","includes","loadedContacts","localStorage","getItem","JSON","parse","setItem","stringify","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3387a4c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import { Component } from 'react';\nimport css from './ContactForm.module.css';\n\nclass Form extends Component {\n    state = {\n        number: '',\n        name: '',\n    }\n\n    onHandleChange = event => {\n        const { name, value } = event.target;\n        this.setState({[name]: value,})\n    }\n\n    onHandleSubmit = event => {\n        event.preventDefault();\n        const { addContact } = this.props;\n        const contact = {\n            id: this.state.id,\n            name: this.state.name,\n            number: this.state.number,\n        }\n        addContact(contact);\n        this.setState({\n            number: '',\n            name: '',\n        })\n    }\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className={css.form} onSubmit={this.onHandleSubmit}>\n                <label className={css.label}>\n                    Name\n                    <input\n                        className={css.input}\n                        value={name}\n                        onChange={this.onHandleChange}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов\"\n                        required\n                        />\n                </label>\n                <label className={css.label}>\n                    Contact\n                    <input\n                        className={css.input}\n                        value={number}\n                        onChange={this.onHandleChange}\n                        type=\"text\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        />\n                </label>\n                <input className={css.button} type=\"submit\" value=\"Add contact\"/>\n            </form>\n        )\n    }\n};\n\nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nconst Filter = ({ searchContact, filter }) => {\n    return (\n        <label className={css.label}>\n            {' '}\n            Find contacts by name\n            <input\n                className={css.input}\n                onChange={event => searchContact(event.target.value)}\n                placeholder='Enter your search request'\n                value={filter}\n            />\n        </label>\n    )\n};\n\nFilter.propTypes = {\n    searchContact: PropTypes.func.isRequired\n}\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ searchContact, deleteContact }) => {\n    return (\n        <ul className={css.list}>\n            {searchContact.map(({ name, number, id }) => {\n                return (\n                    <li className={css.item} key={name}>\n                        <p className={css.contact}>\n                            {' '}\n                            {name}:{number}\n                        </p>\n                        <button type=\"button\"\n                            className={css.btn}\n                            onClick={() => deleteContact(id)}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                )\n            })}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    deleteContact: PropTypes.func.isRequired,\n    searchContact: PropTypes.arrayOf(\n        PropTypes.exact({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string\n        }),\n    ).isRequired,\n};\n\nexport default ContactList;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: ''\n  };\n\n  componentDidMount() {\n    const loadedContacts = localStorage.getItem('contacts');\n    if (loadedContacts) {\n      this.setState({\n        contacts: JSON.parse(loadedContacts),\n      });\n    }\n  };\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  onHandleNewContact = ({ name, number }) => {\n    const findDublicate = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (findDublicate) {\n      alert(\"Такой контакт уже существует!\");\n    } else {\n      const contact = {\n        name,\n        number,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  }\n\n  onHandleFilter = filter => {\n    this.setState({ filter });\n  }\n\n  deleteContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }\n    })\n  }\n\n  searchContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.onHandleNewContact}/>\n        <h2>Contacts</h2>\n        <Filter searchContact={this.onHandleFilter} value={filter}/>\n        <ContactList\n          deleteContact={this.deleteContact}\n          searchContact={this.searchContact()}/>\n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"contact\":\"ContactList_contact__3ZIyH\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}